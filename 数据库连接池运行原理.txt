1、数据库连接池用jdbcDriver通过url、username、password等参数创建一堆connection。并实例化成一个单例的连接池对象。
2、当有线程来时获得connection连接并调用connection.getstatement().excuse(sql)运行sql语句并得到resultSet。
3、通过resultSet.getstring("字段名")得到具体的数据返回数据

备注：1、MySQL默认200为最佳连接数，再多MySQL性能会下降。
      2、连接数 = ((核心数 * 2) + 有效磁盘数)。

笔者注：
这一公式其实不仅适用于数据库连接池的计算，大部分涉及计算和I/O的程序，线程数的设置都可以参考这一公式。我之前在对一个使用Netty编写的消息收发服务进行压力测试时，最终测出的最佳线程数就刚好是CPU核心数的一倍。


公理：你需要一个小连接池，和一个充满了等待连接的线程的队列
如果你有10000个并发用户，设置一个10000的连接池基本等于失了智。1000仍然很恐怖。即是100也太多了。你需要一个10来个连接的小连接池，然后让剩下的业务线程都在队列里等待。连接池中的连接数量应该等于你的数据库能够有效同时进行的查询任务数（通常不会高于2*CPU核心数）。

我们经常见到一些小规模的web应用，应付着大约十来个的并发用户，却使用着一个100连接数的连接池。这会对你的数据库造成极其不必要的负担。

